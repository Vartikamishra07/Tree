class Solution 
{
public:
    bool isBalanced(TreeNode* root) 
    {
        if(height(root)!=-1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    int height(TreeNode *root)
    {
        if(root==NULL) return 0;
        int lh=height(root->left);
        if(lh==-1) return -1;  // left subtree of that node must be balanced 
        int rh=height(root->right);
        if(rh==-1) return -1;  //right subtree of that node must be balanced
        if(abs(lh-rh)>1) return -1; //difference of left and right subtree of any node must not be greater than 1 , it is greater than 1 then the tree is not balanced
        return 1+max(lh,rh);  
    }
};


class Solution {
public:
    // Function to count pseudo-palindromic paths in a binary tree.
    int pseudoPalindromicPaths(TreeNode* root) 
    {
        vector<int>digits(10,0);
        return dfs(root , digits);
    }

private:
    int dfs(TreeNode* root , vector<int>&digits)
    {
        if(root==NULL)
        {
            return 0;
        }
        digits[root->val]++;
        if(root->left==NULL && root->right==NULL)
        {
            int cnt=countOdd(digits);
            digits[root->val]--;
            if(cnt<=1)
            {
                return 1;
            }
            else
            {
                return 0;
            }
        }
        int lr = dfs(root->left , digits);
        int rr = dfs(root->right , digits);
        digits[root->val]--;
        return lr+rr;
    }

    int countOdd(vector<int>&digits)
    {
        int cnt=0;
        for(int i=1;i<10;i++)
        {
            if((digits[i])%2!=0)
            {
                cnt++;
            }
        }
        return cnt;
    }
};

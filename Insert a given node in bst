1.Iterative approach

class Solution 
{
public:
    TreeNode* insertIntoBST(TreeNode* root, int val) 
    {
        if(root==NULL) return new TreeNode(val);
        TreeNode* curr = root;
        while(true)
        {
             if(val>=curr->val)
            {
               if(curr->right!=NULL)
               {
                   curr=curr->right;
               }
               else
               {
                   curr->right=new TreeNode(val);
                   break;
               }
            }
            else
            {
                if(curr->left!=NULL)
                {
                    curr=curr->left;
                }
                else
                {
                    curr->left=new TreeNode(val);
                    break;
                }
            }
        }
        return root;
    }
};

2. Recursive approach

class Solution 
{
public:
    TreeNode* insertIntoBST(TreeNode* root, int val) 
    {
        if(root==NULL)
        {
            return new TreeNode(val);
        }
        if(val>root->val)
        {
            root->right=insertIntoBST(root->right,val);
        }
        else if(val<root->val)
        {
            root->left=insertIntoBST(root->left,val);
        }
        return root;
    }
};


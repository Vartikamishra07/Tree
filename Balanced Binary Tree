1. Solution 1

class Solution 
{
public:
    bool isBalanced(TreeNode* root) 
    {
        if(height(root)!=-1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

    int height(TreeNode *root)
    {
        if(root==NULL) return 0;
        int lh=height(root->left);
        if(lh==-1) return -1;
        int rh=height(root->right);
        if(rh==-1) return -1;
        if(abs(lh-rh)>1) return -1;
        return 1+max(lh,rh);
    }
};


2. Solution 2

class Solution {
public:
    bool isBalanced(TreeNode* root) {
        if(root==NULL)
            return true;
        if(abs(maxDepth(root->left)-maxDepth(root->right))>1)
            return false;
        if(isBalanced(root->left) && isBalanced(root->right))
            return true;
        return false;
    }
    int maxDepth(TreeNode* root) {
        if(root==NULL)
            return 0;
        return max(maxDepth(root->left),maxDepth(root->right))+1;
    }
};
